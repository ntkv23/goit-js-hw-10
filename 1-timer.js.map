{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.getElementById('datetime-picker');\nconst daysRef = document.querySelector('[data-days]');\nconst hoursRef = document.querySelector('[data-hours]');\nconst minutesRef = document.querySelector('[data-minutes]');\nconst secondsRef = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n    if (selected <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selected;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(input, options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  input.disabled = true;\n\n  timerId = setInterval(() => {\n    const delta = userSelectedDate - new Date();\n\n    if (delta <= 0) {\n      clearInterval(timerId);\n      updateTimerUI({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      input.disabled = false;\n      return;\n    }\n\n    updateTimerUI(convertMs(delta));\n  }, 1000);\n});\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  daysRef.textContent = addLeadingZero(days);\n  hoursRef.textContent = addLeadingZero(hours);\n  minutesRef.textContent = addLeadingZero(minutes);\n  secondsRef.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startBtn","input","daysRef","hoursRef","minutesRef","secondsRef","userSelectedDate","timerId","options","selectedDates","selected","iziToast","flatpickr","delta","updateTimerUI","convertMs","days","hours","minutes","seconds","addLeadingZero","ms","value"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,eAAe,iBAAiB,EACjDC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EAE1D,IAAIC,EAAmB,KACnBC,EAAU,KAEdP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAC5BC,GAAY,IAAI,MAClBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAS,SAAW,KAEpBM,EAAmBI,EACnBV,EAAS,SAAW,GAEvB,CACH,EAEAY,EAAUX,EAAOO,CAAO,EAExBR,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAM,SAAW,GAEjBM,EAAU,YAAY,IAAM,CAC1B,MAAMM,EAAQP,EAAmB,IAAI,KAErC,GAAIO,GAAS,EAAG,CACd,cAAcN,CAAO,EACrBO,EAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAC3Db,EAAM,SAAW,GACjB,MACD,CAEDa,EAAcC,EAAUF,CAAK,CAAC,CAC/B,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAc,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDjB,EAAQ,YAAckB,EAAeJ,CAAI,EACzCb,EAAS,YAAciB,EAAeH,CAAK,EAC3Cb,EAAW,YAAcgB,EAAeF,CAAO,EAC/Cb,EAAW,YAAce,EAAeD,CAAO,CACjD,CAEA,SAASJ,EAAUM,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}